NER Task using BERT with data in XML-format - Blackcoffer Insights

HomeOur Success StoriesNER Task using BERT with data in XML-formatOur Success StoriesITNER Task using BERT with data in XML-formatByAjay Bidyarthy-August 5, 20232671Client BackgroundClient:A leading tech firm in the USAIndustry Type:ITServices:SaaS, ProductsOrganization Size:100+The ProblemThe goal of this task is to create and implement a workflow that annotates People/Places/Organizations and assigns them a specific number (from a normdatabase). The NER-Task should be done by using Bert (NER-Germanhttps://huggingface.co/flair/ner-germanor something similar).Our SolutionThe input to this first task is a text in XML-Format. It is important that the structuring text is not altered by the NER. This could be possible by tokenizing the XML-elements in a different/seperate way, to then run the NER with BERT and afterwards add the elements afterwards at the exact position where the initially were. The tags that were added by the NER than can be easily replaced with the required tags in the XML-format.Solution ArchitectureInput Data ðŸ¡ª XML Text Tokenization ðŸ¡ª NER Model ðŸ¡ª Replace NER Tags with XML Tags ðŸ¡ª Final OutputDeliverablesPython toolDocumentationInstallationTools usedVSCode For Python scriptLanguage/techniques usedPython Programming LanguageModels usedNamed Entity Recognition (NER)FuzzyWuzzytqdmFlairPandasSkills usedData LoadingData ProcessingData RestoringWhat are the technical Challenges Faced during Project ExecutionDuring the project execution, we faced the following challenges:Parsing of the input XML file.Predicting the Name, Place and Organization.Rearranging the XML file to its origin form with the predicted value.How the Technical Challenges were SolvedTo solve the technical challenges, we provided following solutions as follow:It was not possible by the beautiful soup library. So by using the logically function start index and end index we break the sentence.For predicting the NPO we used the flair ner-german model.To rearrange the file we used start index and end index function which can be split with a certain condition and we place the predicted value in it.Business ImpactThe client can know easily predict the Name, Place, and Organisation from XML containing file by using our python script model.Project SnapshotsFig. Input XML fileFig. Output XML file with predicted values.Project website urlGithub: https://github.com/AjayBidyarthy/Sven-Meier-XML-tool/tree/masterProject VideoContact DetailsHere are my contact details:Email: ajay@blackcoffer.comSkype: asbidyarthyWhatsApp: +91 9717367468Telegram: @asbidyarthyFor project discussions and daily updates, would you like to use Slack, Skype, Telegram, or Whatsapp? Please recommend, what would work best for you.Previous articleQualtrics API integration using PythonNext articleCRM (Monday.com, Make.com) to Data Warehouse to Klipfolio DashboardAjay BidyarthyRELATED ARTICLESMORE FROM AUTHORAI and ML-Based YouTube Analytics and Content Creation Tool for Optimizing Subscriber Engagement and Content StrategyEnhancing Front-End Features and Functionality for Improved User Experience and Dashboard Accuracy in Partner Hospital ApplicationROAS Dashboard for Campaign-Wise Google Ads Budget Tracking Using Google Ads APMOST POPULAR INSIGHTSBuilding a Real-Time Log File Visualization Dashboard in KibanaAugust 25, 2024Impact of coronavirus on the Indian economyApril 15, 2020Interpret the Coefficients in Regression ModelsApril 4, 2019Google Data Studio Pipeline with GCP/MySQLSeptember 18, 2021Load moreRECOMMENDED INSIGHTSBig Data solution to an online multivendor marketplace eCommerce businessThe Metaverse and its Implications for our Digital Future.Qualtrics API integration using PythonEfficient Coach Allocation System for Sports Coaching Organization